{"ast":null,"code":"var _jsxFileName = \"/Users/mik04rm/kody/mik04rm/flappy/src/components/Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from 'react';\nimport { Vec2 } from '../utility';\nimport Grid from './Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  const newObstacles = state.obstacles.map(obstacle => {\n    obstacle.col -= 1;\n    return obstacle;\n  });\n  const newAllPositions = state.allPositions.map(position => {\n    position.col -= 1;\n    return position;\n  });\n  let newPosition;\n\n  switch (action.type) {\n    case 'moveUp':\n      newPosition = new Vec2(state.position.row - 1, state.position.col);\n      newAllPositions.push(newPosition);\n      return {\n        position: new Vec2(state.position.row - 1, state.position.col),\n        obstacles: newObstacles,\n        allPositions: newAllPositions\n      };\n\n    case 'moveDown':\n      newPosition = new Vec2(state.position.row + 1, state.position.col);\n      newAllPositions.push(newPosition);\n      return {\n        position: new Vec2(state.position.row + 1, state.position.col),\n        obstacles: newObstacles,\n        allPositions: newAllPositions\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Game = () => {\n  _s();\n\n  const initialObstacles = [{\n    col: 6,\n    height: 5,\n    side: 'top'\n  }, {\n    col: 6,\n    height: 3,\n    side: 'bottom'\n  }, {\n    col: 8,\n    height: 4,\n    side: 'top'\n  }, {\n    col: 8,\n    height: 4,\n    side: 'bottom'\n  }];\n  const initialState = {\n    position: new Vec2(3, 3),\n    obstacles: initialObstacles,\n    allPositions: [new Vec2(3, 3)]\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const moveHandler = event => {\n    if (event.key == 'ArrowUp') {\n      dispatch({\n        type: 'moveUp'\n      });\n    } else if (event.key == 'ArrowDown') {\n      dispatch({\n        type: 'moveDown'\n      });\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', moveHandler);\n    return () => document.removeEventListener('keydown', moveHandler);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    position: state.position,\n    obstacles: state.obstacles,\n    allPositions: state.allPositions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mik04rm/kody/mik04rm/flappy/src/components/Game.tsx"],"names":["React","useEffect","useReducer","Vec2","Grid","reducer","state","action","newObstacles","obstacles","map","obstacle","col","newAllPositions","allPositions","position","newPosition","type","row","push","Game","initialObstacles","height","side","initialState","dispatch","moveHandler","event","key","document","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useState} from 'react';\nimport {Obstacle, Vec2} from '../utility';\nimport Grid from './Grid';\n\ntype State = {\n    position: Vec2;\n    obstacles: Obstacle[];\n    allPositions: Array<Vec2>;\n};\n\ntype Action = {\n    type: 'moveUp' | 'moveDown';\n};\n\nconst reducer = (state: State, action: Action): State => {\n    const newObstacles = state.obstacles.map((obstacle) => {\n        obstacle.col -= 1;\n        return obstacle;\n    });\n    const newAllPositions = state.allPositions.map((position) => {\n        position.col -= 1;\n        return position;\n    });\n    let newPosition: Vec2;\n    switch (action.type) {\n        case 'moveUp':\n            newPosition = new Vec2(state.position.row - 1, state.position.col);\n            newAllPositions.push(newPosition);\n            return {\n                position: new Vec2(state.position.row - 1, state.position.col),\n                obstacles: newObstacles,\n                allPositions: newAllPositions\n            };\n        case 'moveDown':\n            newPosition = new Vec2(state.position.row + 1, state.position.col);\n            newAllPositions.push(newPosition);\n            return {\n                position: new Vec2(state.position.row + 1, state.position.col),\n                obstacles: newObstacles,\n                allPositions: newAllPositions\n            };\n        default:\n            return state;\n    }\n};\n\nconst Game: React.FC = () => {\n    const initialObstacles: Obstacle[] = [\n        {col: 6, height: 5, side: 'top'},\n        {col: 6, height: 3, side: 'bottom'},\n        {col: 8, height: 4, side: 'top'},\n        {col: 8, height: 4, side: 'bottom'}\n    ];\n\n    const initialState: State = {\n        position: new Vec2(3, 3),\n        obstacles: initialObstacles,\n        allPositions: [new Vec2(3, 3)]\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const moveHandler = (event: KeyboardEvent) => {\n        if (event.key == 'ArrowUp') {\n            dispatch({type: 'moveUp'});\n        } else if (event.key == 'ArrowDown') {\n            dispatch({type: 'moveDown'});\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('keydown', moveHandler);\n        return () => document.removeEventListener('keydown', moveHandler);\n    });\n\n    return (\n        <Grid\n            position={state.position}\n            obstacles={state.obstacles}\n            allPositions={state.allPositions}\n        />\n    );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}